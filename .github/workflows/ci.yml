name: Multi-Service CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: gameservice_ci
          POSTGRES_USER:  gameservice_user
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: | 
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432; do
            sleep 1
          done
      
      - name: Build game-service
        working-directory: ./game-service
        run: ./gradlew assemble
      
      - name: Test game-service
        working-directory: ./game-service
        env:
          SPRING_R2DBC_URL: r2dbc:postgresql://localhost:5432/gameservice_ci
          SPRING_R2DBC_USERNAME: gameservice_user
          SPRING_R2DBC_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: ./gradlew test
      
      - name: Build Docker image
        working-directory: ./game-service
        run: |
          docker build -t davissmonteiro/game-service:${{ github.sha }} .
          docker tag davissmonteiro/game-service:${{ github.sha }} davissmonteiro/game-service:latest

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Push Docker image
        run: |
          docker push davissmonteiro/game-service:${{ github.sha }}
          docker push davissmonteiro/game-service:latest


